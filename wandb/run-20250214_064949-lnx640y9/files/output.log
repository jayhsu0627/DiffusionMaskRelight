INFO:__main__:***** Running training *****
INFO:__main__:  Num examples = 985
INFO:__main__:  Num Epochs = 100
INFO:__main__:  Instantaneous batch size per device = 1
INFO:__main__:  Total train batch size (w. parallel, distributed & accumulation) = 16
INFO:__main__:  Gradient Accumulation steps = 16
INFO:__main__:  Total optimization steps = 6200
Steps:   0%|                                                                                                                                                                                                | 0/6200 [00:00<?, ?it/s]/sdb5/DiffusionMaskRelight/train_svd_relight.py:1123: UserWarning: Using a target size (torch.Size([1, 12, 1, 256, 256])) that is different to the input size (torch.Size([1, 1, 3, 256, 256])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
torch.Size([12, 3, 256, 256])
torch.Size([1, 12, 3, 128, 128])
  shd_loss = F.mse_loss(recon_shd, shading_gt, reduction='mean')
Traceback (most recent call last):
  File "/sdb5/DiffusionMaskRelight/train_svd_relight.py", line 1396, in <module>
    main()
  File "/sdb5/DiffusionMaskRelight/train_svd_relight.py", line 1137, in main
    enc_shd = tensor_to_vae_latent(shading, vae)
  File "/sdb5/DiffusionMaskRelight/train_svd_relight.py", line 251, in tensor_to_vae_latent
    latents = vae.encode(t).latent_dist.sample()
  File "/opt/conda/envs/DiffLight/lib/python3.10/site-packages/diffusers/utils/accelerate_utils.py", line 46, in wrapper
    return method(self, *args, **kwargs)
  File "/opt/conda/envs/DiffLight/lib/python3.10/site-packages/diffusers/models/autoencoders/autoencoder_kl_temporal_decoder.py", line 327, in encode
    h = self.encoder(x)
  File "/opt/conda/envs/DiffLight/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/envs/DiffLight/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/opt/conda/envs/DiffLight/lib/python3.10/site-packages/diffusers/models/autoencoders/vae.py", line 156, in forward
    sample = self.conv_in(sample)
  File "/opt/conda/envs/DiffLight/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/envs/DiffLight/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/opt/conda/envs/DiffLight/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 554, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/opt/conda/envs/DiffLight/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 549, in _conv_forward
    return F.conv2d(
RuntimeError: Input type (float) and bias type (c10::Half) should be the same
