INFO:__main__:***** Running training *****
INFO:__main__:  Num examples = 985
INFO:__main__:  Num Epochs = 100
INFO:__main__:  Instantaneous batch size per device = 1
INFO:__main__:  Total train batch size (w. parallel, distributed & accumulation) = 16
INFO:__main__:  Gradient Accumulation steps = 16
INFO:__main__:  Total optimization steps = 6200
Steps:   0%|                                                                                                                                                                          | 0/6200 [00:10<?, ?it/s, lr=0, step_loss=1.01]Traceback (most recent call last):
VAE precision: torch.float16
UNet precision: torch.float32
VAE precision: torch.float16
torch.Size([12, 3, 256, 256])
torch.Size([1, 12, 3, 128, 128])
torch.Size([12, 3, 256, 256])
torch.Size([1, 12, 3, 128, 128])
torch.Size([12, 3, 256, 256])
torch.Size([1, 12, 3, 128, 128])
torch.Size([12, 3, 256, 256])
torch.Size([1, 12, 3, 128, 128])
torch.Size([12, 3, 256, 256])
torch.Size([1, 12, 3, 128, 128])
  File "/sdb5/DiffusionMaskRelight/train_svd_relight.py", line 1401, in <module>
    main()
  File "/sdb5/DiffusionMaskRelight/train_svd_relight.py", line 1173, in main
    encoder_hidden_states = encode_image(
  File "/sdb5/DiffusionMaskRelight/train_svd_relight.py", line 989, in encode_image
    pixel_values = _resize_with_antialiasing(pixel_values, (224, 224))
  File "/sdb5/DiffusionMaskRelight/train_svd_relight.py", line 127, in _resize_with_antialiasing
    input = _gaussian_blur2d(input, ks, sigmas)
  File "/sdb5/DiffusionMaskRelight/train_svd_relight.py", line 207, in _gaussian_blur2d
    kernel_x = _gaussian(kx, sigma[:, 1].view(bs, 1))
  File "/sdb5/DiffusionMaskRelight/train_svd_relight.py", line 194, in _gaussian
    gauss = torch.exp(-x.pow(2.0) / (2 * sigma.pow(2.0)))
KeyboardInterrupt
